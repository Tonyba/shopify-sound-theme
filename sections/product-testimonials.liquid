{{ "product-testimonials.css" | asset_url | stylesheet_tag }}
{{ "splide.min.css" | asset_url | stylesheet_tag }}

<div class="section-wrapper-margin reviews-carousel-section">
    <h2>{{ section.settings.heading }}</h2>
    <div class="product-testimonials scroll-wrapper splide">
        <div class="splide__track">
            <div class="splide__list">
                {%- for block in section.blocks -%}
                    <div class="splide__slide">
                        {% render 'review-before-after-item' review:block.settings, is_left: section.settings.title_left, before_text: section.settings.before_text, after_text: section.settings.after_text  %}
                    </div>
                {%- endfor -%}
            </div>
        </div>
      
        <div class="slider-progress">
            <div class="slider-progress-bar"></div>
        </div>
    </div>
</div>

<script src="{{ 'splide.min.js' | asset_url }}" defer></script>
<script src="{{ 'autoscroll.min.js' | asset_url }}" defer></script>

<script defer>

  const w = (window.innerWidth > 0) ? window.innerWidth : screen.width;

    function deferScrollbar(method) {

        if ( typeof OverlayScrollbars != 'undefined' ) {
            method();
        } else {
            setTimeout(function() { deferScrollbar(method) }, 50);
        }
    }

    function deferAutoScroll(method) {
        if (typeof window.splide != 'undefined') {
          method();
        } else {
          setTimeout(function () {
            deferAutoScroll(method);
          }, 50);
        }
      }

    function deferSplide(method) {
        if ( typeof Splide != 'undefined' ) {
            method();
        } else {
            setTimeout(function() { deferSplide(method) }, 50);
        }
    }

    deferSplide(function() {

        const splide = document.querySelector('.reviews-carousel-section .splide.scroll-wrapper');
        const bar = splide.querySelector( '.slider-progress-bar' );
    
        const config = {
            type: 'loop',
            arrows: false,
            pagination: false,
            perPage: 2,
            fixedWidth : '25%',
            gap: 20,
            padding: {
                right: '20%'
            },
            autoScroll: {
              speed: 1,
            },
            breakpoints: {
                768: {
                    perPage: 1,
                    fixedWidth : '100%',
                    padding: {
                        right: 'unset'
                    }
                }
            }   
          };
        
        const splideInstance = new Splide(splide, config);

        splideInstance.on( 'mounted move active', function () {
            const end  = splideInstance.Components.Controller.getEnd() + 1;
            const rate = Math.min( ( splideInstance.index + 1 ) / end, 1 );
            bar.style.width = String( 100 * rate ) + '%';
        });

        if (splide.classList.contains('autoscroll') && w > 768 ) {
            deferAutoScroll(function () {
              splideInstance.mount(window.splide.Extensions);
            });
          } else {
            splideInstance.mount();
          }
    });

</script>


{% schema %}
    {
        "name": "Product Testimonials",
        "class": "product-tesminonials",
        "settings": [
            {
                "type": "text",
                "label": "Heading",
                "id": "heading"
            },
            {
                "type": "text",
                "label": "Before Text",
                "id": "before_text"
            },
            {
                "type": "text",
                "label": "After Text",
                "id": "after_text"
            },
            {
                "type": "checkbox",
                "id": "title_left",
                "label": "Set Reviews titles to left side?",
                "default": false
            }
        ],
        "blocks": [
            {
                "type": "slide",
                "name": "Review",
                "settings": [
                    {
                        "type": "text",
                        "label": "Review Title",
                        "id": "review_title"
                    },
                    {
                        "type": "text",
                        "label": "Review Author",
                        "id": "author"
                    },
                    {
                        "type": "textarea",
                        "label": "Review Text",
                        "id": "review_text"
                    },
                    {
                        "type": "image_picker",
                        "label": "Review Image",
                        "id": "review_img"
                    }
                ]
            }
        ],
        "presets": [
            {
               "name": "Product Testimonials"
            }
        ]
    }
{% endschema %}